a
1
mdl2 <- glm(formula = simplystats ~ date, family = poisson,
| data = hits, offset = log(visits + 1))
mdl2 <- glm(formula = simplystats ~ date, family = poisson,
| data = hits, offset = log(visits + 1))
mdl2 <- glm(formula = simplystats ~ date, family = poisson,
data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
library(MASS)
shuttle
head(shuttle)
?shuttle
shuttle$use
shuttle$wind
head(shuttle)
glm1 <- glm(use ~ wind, data = shuttle, family = "binomial")
glm1
glm2 <- glm(use ~ wind - 1, data = shuttle, family = "binomial")
glm2
?log
exp(glm2$coefficients["windhead"])
e^(-0.2513)
exp(-0.2513)
-0.2513/-0.2831
exp(-0.2513)
number <- exp(-0.2513)
number
number / (1+number)
p1 <- number / (1+number)
number2 <- exp(glm2$coefficients["windtail"])
number2
number2 / (1 + number2)
p2 <- number2 / (1 + number2)
p1/p2
glm2
glm
glm1
head(shuttle$wind)
shuttle$wind <- relevel(shuttle$wind)
shuttle$wind <- relevel(shuttle$wind, ref = "tail")
shuttle$wind
glm1 <- glm(use ~ wind, data = shuttle, family = "binomial")
glm1
exp(windhead)
exp(glm1$coefficients)
p1/p2
glm2 <- glm(use ~ wind - 1, data = shuttle, family = "binomial")
glm2
exp(glm2$coefficients)
glm2 <- glm(use ~ wind + magn, data = shuttle, family = "binomial")
glm2
glm3 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
glm3
glm1 <- glm(use ~ wind, data = shuttle, family = "binomial")
glm2 <- glm(1 - use ~ wind, data = shuttle, family = "binomial")
glm1
head(shuttle)
library(dplyr)
glm2 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
glm2
options(scipen = 9999)
gl2
glm2
rm(list=ls())
list()
library(ggplot2)
library(dplyr)
data(mtcars)
library(ggplot2); library(dplyr); data(mtcars)
library(ggplot2); library(dplyr); data(mtcars)
View(mtcars)
mtcars$vs
typeof(mtcars$vs)
?mtcars
mtcars$am <- as.factor(mtcars$vs)
rm(mtcars)
data(mtcars)
mtcars$am <- as.factor(mtcars$am)
head(mtcars$am)
fit1 <- lm(mpg ~ am, data = mtcars)
fit1 <- lm(mpg ~ am - 1, data = mtcars)
table(mtcars$am)
fit1
summary(fit1)
plot(fit1)
plot(fit1)
fit_hp_am <- lm(hp ~ am - 1, data = mtcars)
summary(fit_hp_am)
fit_hp_am <- lm(hp ~ am, data = mtcars)
fit_hp_am
sumary(fit_hp_am)
summary(fit_hp_am)
fit1 <- lm(mpg ~ am, data = mtcars)
fit1
summary(fit1)
fit_all <- lm(mpg ~ ., data = mtcars)
summary(fit_all)
cor(wt, am1)
fit_wt_am1 <- lm(wt ~ am, data = mtcars)
summary(fit_wt_am1)
fit_wt_am1 <- lm(wt ~ am - 1, data = mtcars)
fit_wt_am1
summary(fit_wt_am1)
mean(mtcars$wt)
fit_mpg_wtam <- lm(mpg ~ wt + am, data = mtcars)
summary(fit_mpg_wtam)
vif(fit_mpg_wtam)
vif(fit_all)
fit_all
View(mpg)
summary(fit_all)
vif(fit_all)
data.frame(c(summary(fit_all), vif(fit_all))
)
vif(fit_all)
fit_all$coefficients
cor(wt, cyl)
lm(mpg ~ disp, data = mtcars)
summary(lm(mpg ~ disp, data = mtcars))
summary(lm(mpg ~ cyl, data = mtcars))
summary(lm(mpg ~ disp, data = mtcars))
summary(lm(mpg ~ hp, data = mtcars))
summary(lm(mpg ~ drat, data = mtcars))
summary(lm(mpg ~ wt, data = mtcars))
cor(mtcars$drat, mtcars$wt)
(cor(mtcars$drat, mtcars$wt))^2
summary(lm(mpg ~ qsec, data = mtcars))
summary(lm(mpg ~ ., data = mtcars))
mtcars$mpg
summary(lm(mpg ~ am, data = mtcars))
summary(lm(mpg ~ drat, data = mtcars))
summary(lm(mpg ~ am + drat, data = mtcars))
lm(mpg ~ ., data = mtcars)
summary(lm(mpg ~ ., data = mtcars))
candidate1 <- lm(mpg ~ wt + am - 1, data = mtcars)
summary(candidate1)
head(wt)
head(mpg$wt)
head(mpg$wt)
head(mtcars$wt)
View(mtcars0
View(mtcars)
summary(mtcars$wt)
plot(mtcars$wt)
plot(y = mtcars$wt)
plot(y = mtcars$wt, x = index)
hist(mtcars$wt)
summary(lm(mpg ~ wt, data = mtcars))
summary(lm(mpg ~ wt + am, data = mtcars))
typeof(mtcars$am)
mtcars$am <- as.factor(mtcars$am)
typeof(mtcars$am)
mtcars$am
mtcars$am <- factor(mtcars$am)
mtcars$am
typeof(mtcars)
typeof(mtcars$am)
mtcars$am
summary(lm(mpg ~ wt + am, data = mtcars))
summary(lm(mpg ~ wt + am - 1, data = mtcars))
maincandid <- (lm(mpg ~ wt + am - 1, data = mtcars))
maincandid
summary <- lm(mpg ~ . - wt - am, data = mtcars))
summary <- lm(mpg ~ . - wt - am, data = mtcars)
summary(lm(mpg ~ . - wt - am, data = mtcars))
vif(maincandid)
fit(wt ~ am, data = mtcars)
summary(lm(wt ~ am, data = mtcars))
summary(lm(mpg ~ ., data = cars_data))
library(ggplot2); library(dplyr); data(mtcars)
cars_data <- tbl_df(mtcars) #Dplyr is more convenient
head(cars_data, n = 5)
cars_data$am <- as.factor(cars_data$am)
summary(cars_data$mpg)
summary(lm(mpg ~ ., data = cars_data))
summary(lm(mpg ~ ., data = cars_data))
library(ggplot2); library(dplyr); data(mtcars)
cars_data <- tbl_df(mtcars) #Dplyr is more convenient
head(cars_data, n = 5)
cars_data$am <- as.factor(cars_data$am)
summary(cars_data$mpg)
summary(lm(mpg ~ ., data = cars_data))
summary(lm(mpg ~ wt), data = mtcars)
summary(lm(mpg ~ wt, data = mtcars))
summary(lm(mpg ~ wt + am, data = mtcars))
summary(lm(mpg ~ wt + hp, data = mtcars))
model2 <- summary(lm(mpg ~ wt + hp, data = mtcars))
vif(model2)
vif(model2)
model2 <- summary(lm(mpg ~ wt + hp, data = mtcars))
model2
vif(model2)
library(stats)
test2 <- summary(lm(mpg ~ wt + hp, data = mtcars))
vif(test2)
vif(fit)
?vif
summary(lm(wt ~ hp, data = mtcars))
summary(lm(hp ~ wt, data = mtcars))
summary(lm(mpg ~ hp, data = mtcars))
summary(lm(mpg ~ wt + qsec, data = mtcars))
?mtcars
summary(lm(mpg ~ wt + gear, data = mtcars))
cor(mtcars$wt, mtcars$qsec)
(cor(mtcars$wt, mtcars$qsec))^2
(cor(mtcars$hp, mtcars$qsec))^2
summary(lm(mpg ~ wt + qsec + am, data = mtcars))
summary(lm(mpg ~ wt + hp + am, data = mtcars))
summary(lm(mpg ~ wt + hp + am, data = cars_data))
summary(lm(mpg ~ wt + hp + qsec, data = cars_data))
summary(lm(mpg ~ wt + hp + am, data = cars_data))
summary(lm(mpg ~ wt + qsec + am, data = cars_data))
summary(lm(mpg ~ wt + am, data = cars_data))
summary(lm(mpg ~ am, data = cars_data))
summary(model_fin$coef)
summary(model_fin$coefficients)
model_fin <- lm(mpg ~ wt + am, data = cars_data)
summary(model_fin$coefficients)
model_fin$coefficients
summary(model_fin)
par(mfrow = c(2,2))
plot(model_fin)
plot(model_fin)
plot(model_fin)
dffits(model_fin)
dffits(model_fin)[18]
arrange(dffits(model_fin))
sort(dffits(model_fin))
sort(dffits(model_fin), descending = fals)[1:5]
sort(dffits(model_fin), descending = F)[1:5]
sort(dffits(model_fin), desc = F)[1:5]
?sort
sort(dffits(model_fin), decreasing = T)[1:5]
sort(dfbetas(model_fin), decreasing = T)[1:5]
cooks.distance(dfbetas(model_fin), decreasing = T)[1:5]
# Set working directory
setwd("//Desktop")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("Regression_Final.Rmd")
markdownToHTML('Regression_Final.md', 'Regression_Final.html', options=c("use_xhml"))
system("pandoc -s Regression_Final.html -o Regression_Final.pdf")
# Set working directory
setwd("//Desktop")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("RegressionFinal.Rmd")
markdownToHTML('RegressionFinal.md', 'RegressionFinal.html', options=c("use_xhml"))
system("pandoc -s RegressionFinal.html -o RegressionFinal.pdf")
# Create .md, .html, and .pdf files
knit("RegressionFinal.Rmd")
markdownToHTML('RegressionFinal.md', 'RegressionFinal.html', options=c("use_xhml"))
system("pandoc -s RegressionFinal.html -o RegressionFinal.pdf")
shiny::runApp('C:/Users/barca/Desktop/DATA SCIENCE/DATA SCIENCE JOHN HOPKINS/Data Product Course 9 Coursework/DataProdCourseWork')
runApp('C:/Users/barca/Desktop/DATA SCIENCE/DATA SCIENCE JOHN HOPKINS/Data Product Course 9 Coursework/DataProdCourseWork')
runApp('C:/Users/barca/Desktop/DATA SCIENCE/DATA SCIENCE JOHN HOPKINS/Data Product Course 9 Coursework/DataProdCourseWork')
runApp('C:/Users/barca/Desktop/DATA SCIENCE/DATA SCIENCE JOHN HOPKINS/Data Product Course 9 Coursework/DataProdCourseWork')
?labels
runApp('C:/Users/barca/Desktop/DATA SCIENCE/DATA SCIENCE JOHN HOPKINS/Data Product Course 9 Coursework/DataProdCourseWork')
?labels
runApp('C:/Users/barca/Desktop/DATA SCIENCE/DATA SCIENCE JOHN HOPKINS/Data Product Course 9 Coursework/DataProdCourseWork')
runApp('C:/Users/barca/Desktop/DATA SCIENCE/DATA SCIENCE JOHN HOPKINS/Data Product Course 9 Coursework/DataProdCourseWork')
install.packages('rsconnect')
setAccountInfo(name='andreavag',
token='0120CD27C49ADE232E17EEEA6C3B8575',
secret='<SECRET>'
setAccountInfo(name='andreavag',
token='0120CD27C49ADE232E17EEEA6C3B8575',
secret='<SECRET>'
)
library(rsconnect)
setAccountInfo(name='andreavag',
token='0120CD27C49ADE232E17EEEA6C3B8575',
secret='<SECRET>')
setAccountInfo(name='andreavag', token='0120CD27C49ADE232E17EEEA6C3B8575', secret='<SECRET>')
setAccountInfo(name='andreavag', token='0120CD27C49ADE232E17EEEA6C3B8575', secret='12341234')
setAccountInfo(name='andreavag',
token='0120CD27C49ADE232E17EEEA6C3B8575',
secret='wX9a4LLgoDec9sDCsCjBbc0quSAJHHDRrD89XQb6')
library(slidify)
install.packages("slidify")
library(devtools)
install_github("slidify", "ramnathv")
library(slidify)
library(slidify)
install.packages("slidify")
library(yaml)
library(yaml)
library(yaml)
library(yaml)
library(dplyr)
library(ggplot2)
library(caret)
setwd("C:\\Users\\barca\\Desktop\\MachineLearningExam")
?read.csv
train_full <- read.csv("pml_training.csv", header = TRUE, sep = ",", na.strings = "NA", stringsAsFactors = TRUE)
train_full <- read.csv("pml-training.csv", header = TRUE, sep = ",", na.strings = "NA", stringsAsFactors = TRUE)
View(train_full)
library(dplyr)
library(ggplot2)
library(caret)
setwd("C:\\Users\\barca\\Desktop\\MachineLearningExam")
train_full <- read.csv("pml_training.csv", header = TRUE, sep = ",", na.strings = "NA", stringsAsFactors = TRUE)
library(dplyr)
library(ggplot2)
library(caret)
setwd("C:\\Users\\barca\\Desktop\\MachineLearningExam")
train_full <- read.csv("pml-training.csv", header = TRUE, sep = ",", na.strings = "NA", stringsAsFactors = TRUE)
train_full <- tbl_df(train_full)
head(train_full)
head(train_full)
head(train_full)
?tapply
?tapply
?sapply
?apply
apply(train_full, 2, mean)
warnings()
apply(train_full, 2, is.na)
apply(train_full, 2, typeof)
apply(train_full, 2, is.na) == TRUE
count(apply(train_full, 2, is.na) == TRUE)
table(apply(train_full, 2, is.na) == TRUE)
table(apply(train_full, 2, is.na)
table(apply(train_full, 2, table(is.na))
table(apply(train_full, 2, table(is.na))
apply(train_full, 2, table(is.na))
apply(train_full, 2, table(is.na))
table(apply(train_full, 2, is.na)
apply(train_full, 2, is.na)
is.na(train_full)
is.na(train_full[,1])
sum(is.na(train_full[,1]))
sum(is.na(train_full[,15]))
sum(is.na(train_full[,16]))
sum(is.na(train_full[,20]))
sum(is.na(train_full[,22]))
sum(is.na(train_full[,23]))
sum(is.na(train_full[,24]))
sum(is.na(train_full[,25]))
rows/2
cols <- ncol(train_full)
rows <- nrow(train_full)
rows <- 2
rows <- nrow(train_full)
rows
knockout <- character(0)
knockout
knockout <- character
knockout
names(train_full[1])
names(train_full[5])
cols <- ncol(train_full)
rows <- nrow(train_full)
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.33)
{knockout <- knockout + names(train_full[i])}
}
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.33)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.5)
{knockout <- c(knockout, names(train_full[i]))}
knockout
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.5)
{knockout <- c(knockout, names(train_full[i]))}
knockout
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.5)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.1)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.1)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.9)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.99)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.99)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.40)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.40)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout
train_full <- read.csv("pml-training.csv", header = TRUE, sep = ",", "", na.strings = "NA", stringsAsFactors = TRUE)
View(train_full)
train_full <- read.csv("pml-training.csv", header = TRUE, sep = ",", na.strings = c("NA", ""), stringsAsFactors = TRUE)
View(train_full)
library(dplyr)
library(ggplot2)
library(caret)
setwd("C:\\Users\\barca\\Desktop\\MachineLearningExam")
train_full <- read.csv("pml-training.csv", header = TRUE, sep = ",", na.strings = c("NA", ""), stringsAsFactors = TRUE)
train_full <- tbl_df(train_full)
cols <- ncol(train_full)
rows <- nrow(train_full)
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) > rows*0.50)
{knockout <- c(knockout, names(train_full[i]))}
}
knockout
names(train_full)
?select()
train_2 <- train_full %>% select(-knockout)
train_2 <- train_full %>% select(knockout)
View(train_2)
rm(train_2)
train_2 <- train_full %>% select(!knockout)
train_2 <- train_full %>% select(!=knockout)
train_2 <- train_full %>% select(=!knockout)
train_2 <- train_full %>% select(- knockout)
rm(list=ls())
library(dplyr)
library(ggplot2)
library(caret)
setwd("C:\\Users\\barca\\Desktop\\MachineLearningExam")
train_full <- read.csv("pml-training.csv", header = TRUE, sep = ",", na.strings = c("NA", ""), stringsAsFactors = TRUE)
train_full <- tbl_df(train_full)
cols <- ncol(train_full)
rows <- nrow(train_full)
knockout <- character(0)
for(i in 1:cols) {
if(sum(is.na(train_full[,i])) < rows*0.50)
{knockout <- c(knockout, names(train_full[i]))}
}
train_2 <- train_full %>% select(knockout)
train_2
View(train_2)
names(train_2$user_name)
table(train_2$user_name)
train_3 <- train2 %>% select(-c("X", "raw_timestamp_part_1", "raw_timestamp_part_2"))
train_3 <- train_2 %>% select(-c("X", "raw_timestamp_part_1", "raw_timestamp_part_2"))
train_3 <- train_2 %>% select(c("X", "raw_timestamp_part_1", "raw_timestamp_part_2"))
rm(train_3)
train_3 <- train_2 %>% !select(c("X", "raw_timestamp_part_1", "raw_timestamp_part_2"))
train_3 <- train_2 %>% select(!c("X", "raw_timestamp_part_1", "raw_timestamp_part_2"))
train_3 <- train_2 %>% select(-c("X", "raw_timestamp_part_1", "raw_timestamp_part_2"))
train_3 <- train_2 %>% select(-c(X, raw_timestamp_part_1, raw_timestamp_part_2))
rm(train_3)
train_3 <- train_2 %>% select(-c(X, raw_timestamp_part_1, raw_timestamp_part_2, cvtd_timestamp))
View(train_3)
list(ls())
?createDataPartition
set.seed(7)
splits <- createDataPartition(train_3, p = 0.25)
splits <- createDataPartition(train_3$classe, p = 0.75)
splits <- createDataPartition(train_3$classe, p = 0.75)
train_final <- train_3[splits,]
train_final <- train_3[splits,]
test_final <-  train_3[-splits,]
splits <- createDataPartition(train_3$classe, p = 0.75, list = F)
train_final <- train_3[splits,]
test_final <-  train_3[-splits,]
dim(train_false)
dim(train_final)
dim(test_final)
?train
?trainControl
train_options <- trainControl(method = "cv", number = 3, verboseIter = TRUE)
?train
View(train_final)
rm(train_full)
model1 <- train(classse ~ ., data = train_final, method = "rf", trControl = train_options)
model1 <- train(classe ~ ., data = train_final, method = "rf", trControl = train_options)
summary(model1)
model1
model1$coefnames
model1$modelInfo
model1$results
confusionMatrix(predict(model1), train_final$classe)
confusionMatrix(predict(model1, newdata = test_final), test_final$classe)
predict(model1, validation20)
validation20 <- train_full <- read.csv("pml-testing.csv", header = TRUE, sep = ",", na.strings = c("NA", ""), stringsAsFactors = TRUE)
validation20
predict(model1, newdata = validation20)
